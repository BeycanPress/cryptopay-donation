name: Create Release and Upload Zip

on:
  release:
    types:
      - released
    branches: 
      - master

env:
  RELEASE_ID: 22
  WP_MIN_VERSION: 5.0
  WP_TESTED_VERSION: 6.6.1
  FOLDER_NAME: cryptopay-donation
  RELEASE_ZIP_NAME: cryptopay-donation.zip
  IGNORED_FILES_LIST: |
    .git
    .github
    .vscode
    .gitignore
    .gitattributes
    src
    gulpfile.mjs
    phpcs.xml
    package.json
    package-lock.json
    composer.json
    composer.lock

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2.4.0

      - name: Get release assets
        run: |
          RELEASE_INFO=$(curl -L -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Content-Type: application/json" \
          "https://api.github.com/repos/${{ github.repository }}/releases/latest")

          ASSET_URL=$(echo "$RELEASE_INFO" | jq -r --arg releaseZip "$RELEASE_ZIP_NAME" '.assets[] | select(.name == $releaseZip) | .url')
          
          if [ -n "$ASSET_URL" ]; then
            echo "ASSET_URL=$ASSET_URL" >> $GITHUB_ENV
          else
            echo "ASSET_URL=null" >> $GITHUB_ENV
          fi
          
      - name: Use existing or create and upload Zip
        run: |
          ASSET_URL=${{ env.ASSET_URL }}
          
          if [ "$ASSET_URL" != "null" ]; then
            echo "Release asset found: $ASSET_URL"
            curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/octet-stream" -o "$RELEASE_ZIP_NAME" -L "$ASSET_URL"

            unzip -t "$RELEASE_ZIP_NAME"
            if [ $? -ne 0 ]; then
                echo "Zip file is corrupted."
            fi
          else
            echo "No matching release asset found for $RELEASE_ZIP_NAME. Creating a new one..."
            
            mkdir -p "$FOLDER_NAME"
            IGNORED_FILES=$(echo "$IGNORED_FILES_LIST" | tr '\n' ' ')
            rsync -av --exclude-from <(echo "$IGNORED_FILES_LIST") ./ "$FOLDER_NAME/"
            rm -r "$FOLDER_NAME/$FOLDER_NAME"
            zip -r "$RELEASE_ZIP_NAME" "$FOLDER_NAME"
            rm -r "$FOLDER_NAME"

            upload_url=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            "https://api.github.com/repos/${{ github.repository }}/releases/${{ github.event.release.id }}" | jq -r '.upload_url')

            upload_url="${upload_url%\{*}" # Remove the query parameters from upload_url

            curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/zip" \
            --data-binary @"$RELEASE_ZIP_NAME" \
            "$upload_url?name=$RELEASE_ZIP_NAME"
          fi
      
      - name: Update Updater release
        run: |
          version=$(echo "${{ github.event.release.tag_name }}")
          changelog=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/releases/${{ github.event.release.id }}" | jq -r '.body')

          curl -X POST \
          -F "version=${version}" \
          -F "changelog=${changelog}" \
          -F "releaseId=$RELEASE_ID" \
          -F "wpMinVersion=$WP_MIN_VERSION" \
          -F "wpTestedVersion=$WP_TESTED_VERSION" \
          -F "file=@$RELEASE_ZIP_NAME;type=application/zip" \
          -H "Authorization: Bearer ${{ secrets.UPDATER_API_SECRET }}" \
          https://services.beycanpress.com/wp-json/updater/update-releases

      - name: Delete ZIP
        run: |
          rm "$RELEASE_ZIP_NAME"